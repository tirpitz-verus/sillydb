plugins {
    id 'java-library'
    id 'maven-publish'
}

group 'mlesiewski'
version '0.5'

java {
    withSourcesJar()
    withJavadocJar()
    modularity.inferModulePath = true
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/tirpitz-verus/sillydb")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'SillyDB'
                description = 'a silly database in java'
                url = 'https://github.com/tirpitz-verus/sillydb'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/tirpitz-verus/sillydb/main/LICENSE'
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'
    implementation group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.0.7'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.18.0'
}

test {
    useJUnitPlatform()
}

tasks.compileJava {
    // use the project's version or define one directly
    options.javaModuleVersion = provider { project.version }
}

javadoc {
    options.addBooleanOption('html5', true)
    options.addStringOption('Xwerror', '-quiet')
}